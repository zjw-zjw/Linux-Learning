
  -------------------<   Linux对大小写是敏感的    >----------------------

  1.显示日期 : date
     显示日历：cal

  2.显示当前路径: pwd

  3.进入文件夹：cd   文件夹名

  4.退回上一级： cd ..

  5.退回到根目录：cd  \

  6.清除屏幕 :  clear
 
  7.看一下当前文件夹的内容: ls、ls -l

  8.新建文件夹: mkdir  文件夹名字

  9.移除文件夹: rmdir 文件夹名字

  10.复制文本文件: cp  文件名  新复制出来的文件名

  11.查看文件内容：cat  文件名

  12.判断两个文件的差异: diff  文件1  文件2  （若无任何结果，则表示两个文件是一样的。）
  
  13.查看文件的文件头或者一个文本文件前面几行的内容： head   文件名   -n   行数
 
  14.查看文件的最后几行：  tail  文件名   -n   行数

  15.查看文件的行数(l)、单词数(w)、总字符数(c)： wc + 文件名
        如果只想看文件有几行： wc   -l     文件名
        如果只想看文件单词数： wc   -w   文件名
        如果只想看文件总字符： wc   -c    文件名
  
  16.删除文件：rm   文件名 (慎用，文件是完完全全删除掉了)

  17.重命名文件: mv  原文件名  新文件名

  18.移动文件到另一个文件夹： mv  文件名  文件夹名  
  
  19.以移动的方式查看文件内容： less   文件名
      输入 q 退出浏览 
  
  20.（chmod命令）修改读写权限： （u表示作者，g表示小组，o表示其他人）
	去掉作者可读权限：chmod  u-r  文件名
  	找回权限: 	             chmod  u+r  文件名  
	设置仅对自己可读：chomd  go-r  文件名
	利用数字修改权限： 例如：chmod 444 文件名 (修改后，作者，小组，其他人都设置只读权限)
			444(十进制)： 100 100 100(二进制)
  21.（grep命令）"正则表达式"
	查找指定单词或字母是否在文件中： grep 单词(字母) 文件名 （若存在，返回要查的单词(字母)）
	查找某个字母出现不止一次(0次，1次.....很多次)： grep 字母*  文件名 （*号表示一个符号出现任意多次）
	查找某个字母至少出现一次(1次.....很多次)：         grep 字母字母*  文件名
  	查找以某个字母开头：		       grep ^字母  文件名
	查找两个字母混合在一个单词里面的：   	       grep [字母字母]字母  文件名
		例如： grep [Hh]ill  test1.txt  （就会在tset1.txt文件中出现包含Hill或者hill的单词）

	进行统计(包括了行、单词数、总单词数)： grep 字母  文件名  |  wc
	进行统计行数：    grep 字母  文件名  |  wc  -l
	进行统计单词数： grep 字母  文件名  |  wc  -w
	进行统计总字符： grep 字母  文件名  |  wc  -c
	
   22.（Shell Script）脚本：一堆的命令写到一起，打包成一个文件，这个文件就叫做脚本文件(一般以.sh作为文件后缀)

         运行脚本文件： sh 脚本文件名

         变量variable：在Linux脚本里面也支持变量，在内存开一个空间，把一个数字或者一段文字暂时保存到这个空间里

         输出语句：echo
	例1： a=10     ( 有一个变量a,里面保存了10，注意！！：赋值等号两边不能有空格 )
      	       echo  $a  ( 使用a这个变量时候，在a前面加“$”符号 )
	例2：输出一段字符串
	      echo "Hello World"
	例3：计算
	        a=10
	        b=3
	        c=`expr $a + $b` (expr命令用来计算一个式子,用'' ` ''符号括起来）
	        echo $c	  （注意！算术运算符+号两边一定要有空格！)
	       
	例4：乘法计算（特殊）
	        a=10
	        b=3
	        c=`expr $a  \*  $b` (*号前面要有\，\表示为转义字符)
	        echo $c
	例5：括号的书写（特殊）:    \(   \)       说明： \表示为转义字符	

        条件判断语句：if 
	     格式：	if [ ... ]
		then 
		        ....
		else
		        ....
		fi
	     比较符号： 大于>：          -gt     ( greater than )
		      小于<：          -lt      ( less than )
		      大于等于>=： -ge    ( greater equal )
		      小于等于>=： -le     ( less equal ) 
		      等于：	            -eq    ( equal )
		      不等于：         -ne    ( not equal )
        循环语句1：for
              格式：
	        for x in  ....
	        do 
                                .....
	        done

              例子：循环十次把x打印出来
	        for x in  1 2 3 4 5 6 7 8 9 10
	        do 
	               echo  $x
	        done
    
        循环语句2：while
                  格式： 
	            while [ ... ]
	             do
		     ....
       	             done
	  例子: 
	            while [ $x -le 10]
	            do
		 echo  $x
		 x=`expr $x + 1`
	             done





